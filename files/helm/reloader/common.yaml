global:
  imagePullSecrets: []

kubernetes:
  host: https://kubernetes.default

nameOverride: ""
fullnameOverride: ""

reloader:
  autoReloadAll: false
  isArgoRollouts: false
  isOpenshift: false
  ignoreSecrets: false
  ignoreConfigMaps: false
  reloadOnCreate: false
  reloadOnDelete: false
  syncAfterRestart: false
  reloadStrategy: default
  ignoreNamespaces: ""
  namespaceSelector: ""
  resourceLabelSelector: ""
  logFormat: ""
  watchGlobally: true
  enableHA: false
  readOnlyRootFileSystem: false
  legacy:
    rbac: false
  matchLabels: {}
  enableMetricsByNamespace: false
  deployment:
    replicas: 1

    revisionHistoryLimit: 2

    nodeSelector:
    affinity: {}

    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      seccompProfile:
        type: RuntimeDefault

    containerSecurityContext: {}
    tolerations: []
    topologySpreadConstraints: []

    annotations: {}
    labels:
      provider: stakater
      group: com.stakater.platform
      version: v1.0.121
    image:
      name: ghcr.io/stakater/reloader
      tag: v1.0.121
      pullPolicy: IfNotPresent
    env:
      open:
      secret:
      field:
      existing:

    livenessProbe: {}
    readinessProbe: {}
    resources: {}
    pod:
      annotations: {}
    priorityClassName: ""
    gomaxprocsOverride: ""
    gomemlimitOverride: ""

  service: {}

  rbac:
    enabled: true
    labels: {}
  serviceAccount:
    create: true
    labels: {}
    annotations: {}

    name:

  custom_annotations: {}

  serviceMonitor:
    enabled: false
    labels: {}

    annotations: {}

    honorLabels: true

    metricRelabelings: []
    relabelings: []

    targetLabels: []

  podMonitor:
    enabled: false
    labels: {}

    annotations: {}

    honorLabels: true

    metricRelabelings: []
    relabelings: []

    podTargetLabels: []

  podDisruptionBudget:
    enabled: false

  netpol:
    enabled: false
    from: []
    to: []

  verticalPodAutoscaler:
    enabled: false
    controlledResources: []
    maxAllowed: {}
    minAllowed: {}
    updatePolicy:
      updateMode: Auto

  volumeMounts: []

  volumes: []

  webhookUrl: ""
